#!/bin/sh
#
# networking    manage network interfaces and configure some networking options.
#
# Version:      1.0.0  13-02-2009  ene@SSV, based on original
#

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
. /etc/init.d/functions

if ! [ -x /sbin/ifup ]; then
    exit 0
fi

spoofprotect_rp_filter () {
    # This is the best method: turn on Source Address Verification and get
    # spoof protection on all current and future interfaces.
    
    if [ -e /proc/sys/net/ipv4/conf/all/rp_filter ]; then
        for f in /proc/sys/net/ipv4/conf/*; do
	    [ -e $f/rp_filter ] && echo 1 > $f/rp_filter
        done
        return 0
    else
        return 1
    fi
}

spoofprotect () {
    g_echo -n "Setting up IP spoofing protection.........................."
    if spoofprotect_rp_filter; then
        echo "done"
    else
        echo "failed"
    fi
}

ip_forward () {
    if [ -e /proc/sys/net/ipv4/ip_forward ]; then
        g_echo -n "Enabling packet forwarding............................."
        echo 1 > /proc/sys/net/ipv4/ip_forward
        g_echo "done"
    fi
}

syncookies () {
    if [ -e /proc/sys/net/ipv4/tcp_syncookies ]; then
        g_echo -n "Enabling TCP/IP SYN cookies............................"
        echo 1 > /proc/sys/net/ipv4/tcp_syncookies
        g_echo "done"
    fi
}

doopt () {
    optname=$1
    default=$2
    opt=`grep "^$optname=" /etc/network/options`
    if [ -z "$opt" ]; then
        opt="$optname=$default"
    fi
    optval=${opt#$optname=}
    if [ "$optval" = "yes" ]; then
        eval $optname
    fi
}

case "$1" in
    start)
	[ -f /etc/hostname ] && hostname -F /etc/hostname
	doopt spoofprotect yes
        doopt syncookies no
        doopt ip_forward no
	g_echo -n "Configuring network interfaces............................."
	if sed -n 's/^[^ ]* \([^ ]*\) \([^ ]*\) .*$/\1 \2/p' /proc/mounts | grep -q "^/ nfs$"; then
	    g_echo "NFS mount"
	else	      
    	    ifup -a
	    g_echo "done"
	fi
	;;
    stop)
	if sed -n 's/^[^ ]* \([^ ]*\) \([^ ]*\) .*$/\2/p' /proc/mounts | 
          grep -qE '^(nfs|smbfs|ncp|coda)$'; then
            echo "NOT deconfiguring network interfaces: network shares still mounted."
        else
            echo -n "Deconfiguring network interfaces... "
            ifdown -a
	    echo "done"
        fi
	;;
    force-reload|restart)
        echo -n "Reconfiguring network interfaces... "
        ifdown -a
        ifup -a
	echo "done"
	;;
    *)
	echo "Usage: /etc/init.d/networking {start|stop|restart|force-reload}"
	exit 1
	;;
esac

exit 0

